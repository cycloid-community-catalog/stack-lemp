
#
# Terraform
#

# Amazon access to use to run terraform. Usually admin account to be able to create Amazon services.

#. aws_access_key (required): ((aws.access_key))
#+ Amazon AWS access key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_access_key: ((aws.access_key))

#. aws_secret_key (required): ((aws.secret_key))
#+ Amazon AWS secret key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_secret_key: ((aws.secret_key))

#. aws_default_region (required): eu-west-1
#+ Amazon AWS region to use for Terraform.
aws_default_region: eu-west-1

#. terraform_storage_bucket_name (required): ($ organization_canonical $)-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: ($ organization_canonical $)-terraform-remote-state

#. rds_password (required): ((custom_rds_password))
#+ Password used for your rds. Set "empty" if you dont use databases
rds_password: ((custom_rds_password))


#
# Ansible
#

#. deploy_bucket_name (required): ($ project $)-deploy
#+ AWS S3 bucket name in which store the builded code of the website.
deploy_bucket_name: ($ project $)-deploy

#. deploy_bucket_object_path (required): /catalog-lemp-app/($ environment $)/lemp-app.tar.gz
#+ AWS S3 bucket path in which store the builded code of the website.
deploy_bucket_object_path: /catalog-lemp-app/($ environment $)/lemp-app.tar.gz

#. ansible_vault_password (optional): ((custom_ansible_vault_password))
#+ Password used by ansible vault to decrypt your vaulted files.
ansible_vault_password: ((custom_ansible_vault_password))

#. bastion_url (required): user@bastion.server.com
#+ bastion URL used by ansible to connect on AWS EC2 instances.
bastion_url: user@bastion.server.com

#. bastion_private_key_pair (required): ((ssh_bastion.ssh_key))
#+ bastion SSH private key used by ansible to connect on AWS EC2 instances and the bastion itself.
bastion_private_key_pair: ((ssh_bastion.ssh_key))


#
# Repos
#

#. config_git_repository (required): git@github.com:MyUser/config-lemp-app.git
#+ Git repository URL containing the config of the stack.
config_git_repository: git@github.com:MyUser/config-lemp-app.git

#. config_git_branch (required): master
#+ Branch of the config Git repository.
config_git_branch: master

#. config_git_private_key (required): ((ssh_config.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((ssh_config.ssh_key))


#. lemp_git_repository (required): git@github.com:MyUser/code-lemp.git
#+ URL to the Git repository containing LEMP website source code.
lemp_git_repository: git@github.com:MyUser/code-lemp.git

#. lemp_git_branch (required): master
#+ Branch of the LEMP source code Git repository.
lemp_git_branch: master

#. lemp_git_private_key (required): ((ssh_lemp_app.ssh_key))
#+ SSH key pair to fetch LEMP source code Git repository.
lemp_git_private_key:  ((ssh_lemp_app.ssh_key))


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. stack_git_branch (required): master
#+ Branch to use on the public stack Git repository
stack_git_branch: master

#. config_ansible_path (required): ($ project $)/ansible
#+ Path of Ansible files in the config Git repository
config_ansible_path: ($ project $)/ansible

#. config_terraform_path (required): ($ project $)/terraform/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/($ environment $)

#. config_pipeline_path (required): ($ project $)/pipeline
#+ Path of pipeline task yml files in the config Git repository. Used to override pipeline yask like build-release.yml
config_pipeline_path: ($ project $)/pipeline

#. ansible_version (required): "2.7"
#+ Ansible version used in packer and cycloid-toolkit ansible runner
ansible_version: "2.7"

#. debug_public_key (optional): ""
#+ SSH pubkey injected by packer during the ec2 ami build. Used only to debug failure.
debug_public_key: ""
